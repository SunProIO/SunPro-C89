= マルコフ連鎖

解析した短歌をもとに、マルコフ連鎖というテクニックを用いて
「啄木の短歌」っぽい文章を無限に生成していきます。

== マルコフ連鎖について

プログラミングや自然言語処理について詳しく知らない方でも、
マルコフ連鎖という単語は耳にしたことがあるのではないでしょうか。
近年はTwitter上のツイートをもとにマルコフ連鎖で適当なことを言わせるbotが多く知られており、
しゅうまい君@<fn>{shuumai}などは特に有名だと思います。

マルコフ連鎖は、本来は状態遷移する確率モデルの解析に用いられる用語で、
特に言語処理特有の用語ではなく、強化学習などの分野でも用いられます。
これは解析対象のモデルがマルコフ性@<fn>{marcov-property}を持つという仮定のもとで、
存在しうる状態遷移を列挙するパターンの一つです。
自然言語処理におけるマルコフ連鎖は、これを形態素間の遷移関係に応用したもので、
与えられたコーパスをもとに新規に文章を生成する能力を持ちます。
が、当然ながら本来の自然言語がそんな単純なパターンで生成されるはずもなく、
マルコフ連鎖が生成するのはあくまで擬似的な自然言語にとどまります。

== マルコフ連鎖の仕組み

では、具体的にマルコフ連鎖がどのように文章を生成するのか見てみます。
今回の解析対象の一つである『一握の砂』所収の一首、
「うるみたる目と／目の下の黒子のみ／いつも目につく友の妻かな」を例にとります。

//image[marcov][マルコフ過程によるオートマトン生成]{
//}

まず、マルコフ過程は、文章における形態素を状態とみなし、
形態その並びを状態間の遷移関係を表現しているものとみなします。
そして、この遷移関係をもとに、オートマトンと呼ばれる状態遷移図を作成します。

図では出現する形態素を丸印で、形態素どうしの遷移を矢印で表しています。
左端の「うるみ」から矢印をうまく辿って行くと、もとの短歌を復元できることが分かるかと思います。

//image[marcov-route][マルコフ連鎖による文章生成]{
//}

次に、このオートマトン上を、もとの短歌における順番を無視して
適当な方向に辿っていきます。

上図では、実際に辿った遷移を濃く塗ってあります。
辿った形態素を前から順番に繋げて読んでみると、
「うるみたる目につく友の下の妻かな」となります。
まあ、これだけではあまり実際的な意味を持つ文章になりませんし、
短歌の形式にもなっていないのですが、日本語として文法の正しい文章にはなっています。

このようにマルコフ連鎖は、与えられたコーパスをもとに、
それに似た文章をいくらでも生成することができます。
逆に言うと、与えられたコーパスに含まれる単語からしか文章を生成できないという欠点を持ち、
学習データが小さいと生成できるパターンも少なく、無理のある文章になりがちです。

今回の学習データが啄木の生涯の歌作の半分近くを網羅しているとはいえ、
さすがに745首では啄木の語彙の全てをカバーしているとは言いがたいです。
実際、今回復元しようとしている歌の初二句に含まれる「大跨」「緣側」と言った単語は、
これらの学習データには含まれていません。
もっと復元の精度を上げるためには、何らかの方法で辞書データから啄木の使いそうな単語を新規に選択することが求められますが、
そのあたりはなかなか難しいところです。

実際に745首のデータをもとに「大跨に緣側を歩けば」からマルコフ連鎖を伸ばしていくと、
下のようになります。
（なお句読点や約物のたぐいは、短歌の意味を取る上で本質的でないという理由から除去してあります）

//list[kindaibungo-example][近代文語UniDic解析例]{
$ lsc marcov.ls
大跨に緣側を歩けば襟に頤をぢっとしわが泣くをこはす気持のよさは逃げ去れり病ある眼このごろ思ふ
大いなる敵目の酢のかと医者にかの浜薔薇よ墓ぞ子よかなしくもめとらず泣きたくて酒のむが出づるや
はこの世さびしくも長く書きさしてふと思ふ存分叱りつくる人が小さくなればかなそれをも暮したりと
をのべて笑める日も来にみしかな昔小半日堅き皮をばむしりてあそびきそれにそを嗅ぐ
//}

これだけではまだまだ短歌とはいえません。力技でどうにかしましょう。

//footnote[shuumai][https://twitter.com/shuumai]
//footnote[marcov-property][すべての過程の将来条件の確率分布が現在状態にのみ依存し、そこに至る状態によって左右されないこと]
